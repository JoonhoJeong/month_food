{"version":3,"sources":["components/ThisMonthFoods.js","components/App.js","reportWebVitals.js","index.js"],"names":["ThisMonthFoods","useState","fdmtNm","rtnFileCours","rtnStreFileNm","cntntsNo","storageMethod","monthFoodList","setMonthFoodList","useEffect","Axios","post","params","thisYear","thisMonth","apiKey","then","response","arr","XMLParser","parseFromString","data","getElementsByTagName","map","item","value","replace","split","getMonthFoodDetail","catch","error","console","log","index","cstdyMthDtl","className","Array","isArray","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAsHeA,MAhHf,WACE,MAA0CC,mBAAS,CACjDC,OAAQ,KACRC,aAAc,KACdC,cAAe,KACfC,SAAU,KACVC,cAAe,OALjB,mBAAOC,EAAP,KAAsBC,EAAtB,KAQAC,qBAAU,WAIRC,IAAMC,KADI,yDACM,KAAM,CACpBC,OAAQ,CACNC,SAAU,OACVC,UAAW,KACXC,OAAQ,iCAGTC,MAAK,SAACC,GACL,IAGIC,EACJA,GAJU,IAAIC,KAAYC,gBAAgBH,EAASI,MACnCC,qBAAqB,QAGzBC,KAAI,SAACC,GACf,MAAO,CACLtB,OAAQsB,EACLF,qBAAqB,UAAU,GAC/BG,MAAMC,QAAQ,MAAO,IACxBvB,aAAcqB,EACXF,qBAAqB,gBAAgB,GACrCG,MAAMC,QAAQ,MAAO,IACrBC,MAAM,KAAK,GACdvB,cAAeoB,EACZF,qBAAqB,iBAAiB,GACtCG,MAAMC,QAAQ,MAAO,IACrBC,MAAM,KAAK,GACdtB,SAAUmB,EACPF,qBAAqB,YAAY,GACjCG,MAAMC,QAAQ,MAAO,QAG5BE,EAAmBV,MAEpBW,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IAAMF,EAAqB,SAACV,GAI1BA,EAAIK,KAAI,SAACC,EAAMS,GAEbvB,IAAMC,KALE,yDAKQ,KAAM,CACpBC,OAAQ,CACNP,SAAUmB,EAAKnB,SACfU,OAAQ,iCAGTC,MAAK,SAACC,GACL,IAEIiB,GAFM,IAAIf,KAAYC,gBAAgBH,EAASI,MAE7BC,qBAAqB,eAE3CJ,EAAIe,GAAO3B,cAAgB4B,EAAY,GAAGT,MAAME,MAAM,6BAAS,GAC/DI,QAAQC,IAAI,MAAOd,GACnBV,EAAiBU,MAElBW,OAAM,SAACC,GACNC,QAAQC,IAAIF,UAcpB,OATAC,QAAQC,IAAI,gBAAiBzB,GAC7BwB,QAAQC,IAAI,mBAAoBzB,EAAc,IAE1CA,EAAc,IAChBwB,QAAQC,IAAR,6BACwBzB,EAAc,GAAGJ,aADzC,YACyDI,EAAc,GAAGH,gBAK1E,qBAAK+B,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACGC,MAAMC,QAAQ9B,IACb,qBACE+B,IAAG,qCAAgC/B,EAAc,GAAGJ,aAAjD,YAAiEI,EAAc,GAAGH,eACrFmC,IAAI,WAKV,sBAAKJ,UAAU,UAAf,UACE,6BAAKC,MAAMC,QAAQ9B,IAAkBA,EAAc,GAAGL,SACtD,4BACGkC,MAAMC,QAAQ9B,IAAkBA,EAAc,GAAGD,2BC/FjDkC,MAVf,WACE,OACE,qBAAKL,UAAU,MAAf,SAEE,cAAC,EAAD,OCKSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f72f237b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../Config';\r\nimport Axios from 'axios';\r\nimport './ThisMonthFoods.css';\r\nimport XMLParser from 'react-xml-parser';\r\n\r\nfunction ThisMonthFoods() {\r\n  const [monthFoodList, setMonthFoodList] = useState({\r\n    fdmtNm: null,\r\n    rtnFileCours: null,\r\n    rtnStreFileNm: null,\r\n    cntntsNo: null,\r\n    storageMethod: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // let monthFoodsURL = API_URL + 'monthFdmtLst';\r\n    // \"proxy\": \"http://api.nongsaro.go.kr/service/monthFd/\",\r\n    let url = 'http://api.nongsaro.go.kr/service/monthFd/monthFdmtLst';\r\n    Axios.post(url, null, {\r\n      params: {\r\n        thisYear: '2015',\r\n        thisMonth: '09',\r\n        apiKey: '20210927YDGGO5VZ65DA9GRKISG',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        let xml = new XMLParser().parseFromString(response.data);\r\n        let items = xml.getElementsByTagName('item');\r\n        // console.log(items);\r\n        let arr = [];\r\n        arr = items.map((item) => {\r\n          return {\r\n            fdmtNm: item\r\n              .getElementsByTagName('fdmtNm')[0]\r\n              .value.replace(/ >/g, ''),\r\n            rtnFileCours: item\r\n              .getElementsByTagName('rtnFileCours')[0]\r\n              .value.replace(/ >/g, '')\r\n              .split('|')[0],\r\n            rtnStreFileNm: item\r\n              .getElementsByTagName('rtnStreFileNm')[0]\r\n              .value.replace(/ >/g, '')\r\n              .split('|')[0],\r\n            cntntsNo: item\r\n              .getElementsByTagName('cntntsNo')[0]\r\n              .value.replace(/ >/g, ''),\r\n          };\r\n        });\r\n        getMonthFoodDetail(arr);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const getMonthFoodDetail = (arr) => {\r\n    let url = 'http://api.nongsaro.go.kr/service/monthFd/monthFdmtDtl';\r\n    // console.log('monthFoodList? ', monthFoodList.length);\r\n\r\n    arr.map((item, index) => {\r\n      // console.log('jjh1', item);\r\n      Axios.post(url, null, {\r\n        params: {\r\n          cntntsNo: item.cntntsNo,\r\n          apiKey: '20210927YDGGO5VZ65DA9GRKISG',\r\n        },\r\n      })\r\n        .then((response) => {\r\n          let xml = new XMLParser().parseFromString(response.data);\r\n          // console.log(xml);\r\n          let cstdyMthDtl = xml.getElementsByTagName('cstdyMthDtl');\r\n          // console.log(cstdyMthDtl[0].value.split('■ 손질법')[0]);\r\n          arr[index].storageMethod = cstdyMthDtl[0].value.split('■ 손질법')[0];\r\n          console.log('arr', arr);\r\n          setMonthFoodList(arr);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  console.log('monthFoodList', monthFoodList);\r\n  console.log('monthFoodList[0]', monthFoodList[0]);\r\n  // console.log(monthFoodList[0].storageMethod);\r\n  if (monthFoodList[0]) {\r\n    console.log(\r\n      `www.nongsaro.go.kr/${monthFoodList[0].rtnFileCours}/${monthFoodList[0].rtnStreFileNm}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='ThisMonthFoods'>\r\n      <div className='container'>\r\n        <div className='box'>\r\n          <div className='imgBx'>\r\n            {Array.isArray(monthFoodList) && (\r\n              <img\r\n                src={`https://www.nongsaro.go.kr/${monthFoodList[0].rtnFileCours}/${monthFoodList[0].rtnStreFileNm}`}\r\n                alt='img1'\r\n              />\r\n              // <img src='https://picsum.photos/200' alt='display image' />\r\n            )}\r\n          </div>\r\n          <div className='content'>\r\n            <h3>{Array.isArray(monthFoodList) && monthFoodList[0].fdmtNm}</h3>\r\n            <p>\r\n              {Array.isArray(monthFoodList) && monthFoodList[0].storageMethod}\r\n              {/* hello */}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThisMonthFoods;\r\n","import './App.css';\r\nimport ThisMonthFoods from './ThisMonthFoods';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <MonthInfo /> */}\r\n      <ThisMonthFoods />\r\n      {/* <ThisMonthRecipes /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}